<Window x:Class="ViewLayerWpfApp.Views.ProjectsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:local="clr-namespace:ViewLayerWpfApp.ViewModels.Projects"
        xmlns:ControlExt="clr-namespace:ViewLayerWpfApp.Views"
        mc:Ignorable="d"
        Title="Проекты" Height="520.4" Width="1325.5" Closed="Window_Closed">
    <Window.DataContext>
        <local:ProjectsViewModel/>
    </Window.DataContext>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding DataLoadingCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid Margin="0,0,0,0">
        <Menu Name="menu" HorizontalAlignment="Left" Height="22" VerticalAlignment="Top" Width="1308">
            <MenuItem Name="menuItemEmployees" Header="Сотрудники" Click="menuItemEmployees_Click"/>
            <MenuItem Name="menuItemHelp" Header="Помощь" Click="menuItemHelp_Click"/>
        </Menu>
        <GroupBox Name="groupBoxFilters" Header="Фильтры данных в таблице" HorizontalAlignment="Left" Margin="11,52,0,0" VerticalAlignment="Top" Height="189" Width="1298" Background="White" >
            <Grid Margin="0,0,0,0">
                <GroupBox Name="groupBoxProjNameFilter" Header="По названию проекта" HorizontalAlignment="Left" Margin="0,10,0,0" VerticalAlignment="Top" Height="104" Width="187" Background="#FFF3F3F3">
                    <Grid>
                        <TextBox Name="textBoxProjName" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="175" Margin="0,59,0,0" Text="{Binding ProjNameFilter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding ProjNameChangedCommand}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="GotFocus" >
                                    <i:InvokeCommandAction Command="{Binding ProjNameGotFocusCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </Grid>
                </GroupBox>
                <GroupBox Name="groupBoxOrgOrderNameFilter" Header="По названию организации-заказчика" HorizontalAlignment="Left" Margin="187,10,0,0" VerticalAlignment="Top" Height="104" Width="233" Background="#FFF3F3F3">
                    <Grid>
                        <TextBox Name="textBoxOrgOrderName" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="221" Margin="0,59,0,0" Text="{Binding OrgOrderNameFilter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding OrgOrderNameChangedCommand}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding OrgOrderNameGotFocusCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </Grid>
                </GroupBox>
                <GroupBox Name="groupBoxOrgExecNameFilter" Header="По названию организации-исполнителя" HorizontalAlignment="Left" Margin="420,10,0,0" VerticalAlignment="Top" Height="104" Width="249" Background="#FFF3F3F3">
                    <Grid>
                        <TextBox Name="textBoxOrgExecName" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="236" Margin="0,59,0,0" Text="{Binding OrgExecNameFilter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding OrgExecNameChangedCommand}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding OrgExecNameGotFocusCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </Grid>
                </GroupBox>
                <GroupBox Name="groupBoxBeginningDateFilter" Header="По дате начала" HorizontalAlignment="Left" Margin="669,10,0,0" VerticalAlignment="Top" Height="104" Width="229" Background="#FFF3F3F3">
                    <Grid Margin="0,0,0,0">
                        <DatePicker Name="dPUpBeginnigDate" HorizontalAlignment="Left" Margin="114,27,0,0" VerticalAlignment="Top" SelectedDate="{Binding UpBeginningDateFilter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectedDateChanged">
                                    <i:InvokeCommandAction Command="{Binding UpBeginnigDateChangedCommand}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding UpBeginnigDateGotFocusCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </DatePicker>
                        <DatePicker Name="dPLowBeginnigDate" HorizontalAlignment="Left" Margin="114,56,0,0" VerticalAlignment="Top" SelectedDate="{Binding LowBeginningDateFilter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectedDateChanged">
                                    <i:InvokeCommandAction Command="{Binding LowBeginnigDateChangedCommand}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding LowBeginnigDateGotFocusCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </DatePicker>
                        <Label Content="Верхний предел" HorizontalAlignment="Left" Margin="0,25,0,0" VerticalAlignment="Top" Width="109"/>
                        <Label Content="Нижний предел" HorizontalAlignment="Left" Margin="0,56,0,0" VerticalAlignment="Top" Width="109"/>
                    </Grid>
                </GroupBox>
                <GroupBox Name="groupBoxEndDateFilter" Header="По дате завершения" HorizontalAlignment="Left" Margin="898,10,0,0" VerticalAlignment="Top" Height="104" Width="224" Background="#FFF3F3F3">
                    <Grid>
                        <DatePicker Name="dPUpEndDate" HorizontalAlignment="Left" Margin="110,27,0,0" VerticalAlignment="Top" SelectedDate="{Binding UpEndDateFilter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectedDateChanged">
                                    <i:InvokeCommandAction Command="{Binding UpEndDateChangedCommand}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding UpEndDateGotFocusCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </DatePicker>
                        <DatePicker Name="dPLowEndDate" HorizontalAlignment="Left" Margin="110,56,0,0" VerticalAlignment="Top" SelectedDate="{Binding LowEndDateFilter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectedDateChanged">
                                    <i:InvokeCommandAction Command="{Binding LowEndDateChangedCommand}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding LowEndDateGotFocusCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </DatePicker>
                        <Label Content="Верхний предел" HorizontalAlignment="Left" Margin="0,25,0,0" VerticalAlignment="Top" Width="105"/>
                        <Label Content="Нижний предел" HorizontalAlignment="Left" Margin="0,56,0,0" VerticalAlignment="Top" Width="105"/>
                    </Grid>
                </GroupBox>
                <GroupBox Name="groupBoxPriorityFilter" Header="По приоритету" HorizontalAlignment="Left" Margin="1122,10,0,0" VerticalAlignment="Top" Height="104" Width="153" Background="#FFF3F3F3">
                    <Grid>
                        <TextBox Name="textBoxPriority" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="126" Margin="0,59,0,0" Text="{Binding  PriorityFilter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding PriorityChangedCommand}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding PriorityGotFocusCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <RadioButton Name="rBMoreThenOrEquals" Content="Больше, либо равен" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="1,10,0,0" Height="20" IsChecked="{Binding MoreThenOrEqualsFilter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Checked">
                                    <i:InvokeCommandAction Command="{Binding MoreThenOrEqualsCheckedCommand}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding MoreThenOrEqualsGotFocusCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </RadioButton>
                        <RadioButton Name="rBLessThen" Content="Меньше" HorizontalAlignment="Right" Margin="0,30,13.8,0" VerticalAlignment="Top" Width="126" IsChecked="{Binding LessThenFilter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Checked">
                                    <i:InvokeCommandAction Command="{Binding LessThenCheckedCommand}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding LessThenGotFocusCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </RadioButton>
                    </Grid>
                </GroupBox>
                <GroupBox Name="groupBox" Header="Подгрузка данных из базы данных" HorizontalAlignment="Left" Margin="0,114,0,0" VerticalAlignment="Top" Height="52" Width="1275" Background="#FFF3F3F3">
                    <Grid>
                        <CheckBox Name="checkBoxViewFromDB" IsChecked="{Binding LoadFromDb, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" HorizontalAlignment="Left" Margin="10,6,0,0" VerticalAlignment="Top">
                            <CheckBox.Content>
                                Подгружать данные из базы данных.
                                    Подгрузка данных из базы данных предполагает
                                    заполнение поля фильтра и щелчка по кнопке 
                                    "Отобразить". Если очищены все фильтры, то выведутся
                                    все проекты.
                            </CheckBox.Content>
                        </CheckBox>
                        <Button Name="buttonFilterViewFromDB" Content="Отобразить" HorizontalAlignment="Left" Margin="1169,4,0,0" VerticalAlignment="Top" Width="83" Command="{Binding FilterViewFromDBCommand}"  >
                            <Button.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LoadFromDb}" Value="True">
                                            <Setter Property="Button.IsEnabled" Value="True"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding LoadFromDb}" Value="False">
                                            <Setter Property="Button.IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding LoadFromDbInProgress}" Value="True">
                                            <Setter Property="Button.IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                </GroupBox>
            </Grid>
        </GroupBox>
        <ControlExt:ExtDataGrid x:Name="dataGrid" HorizontalAlignment="Left" 
                  Margin="10,246,0,0" VerticalAlignment="Top" Height="156" Width="1298" 
                  AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False"
                  ItemsSource="{Binding ProjectViews, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                  CurrentItem="{Binding CurrentProjView, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                  SelectedItemList="{Binding SelectedProjViews, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                  MouseDoubleClick="dataGrid_MouseDoubleClick">
            <ControlExt:ExtDataGrid.Style>
                <Style TargetType="DataGrid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding LoadFromDbInProgress}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" 
                                                        To="DarkGray"
                                                        AutoReverse="True"
                                                        Duration="0:0:1"
                                                        RepeatBehavior="Forever" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding LoadFromDbInProgress}" Value="False">
                            <Setter Property="Background" Value="{x:Null}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ControlExt:ExtDataGrid.Style>
            <ControlExt:ExtDataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsAdded}" Value="True">
                            <Setter Property="Background" Value="LightGray"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsChanged}" Value="True">
                            <Setter Property="Background" Value="LightGray"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsDeleted}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsFiltered}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ControlExt:ExtDataGrid.RowStyle>
            <ControlExt:ExtDataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Добавить" Command="{Binding AddProjectViewCommand}"/>
                    <MenuItem Header="Удалить" Command="{Binding DelProjectViewCommand}"/>
                </ContextMenu>
            </ControlExt:ExtDataGrid.ContextMenu>
            <ControlExt:ExtDataGrid.Columns>
                <DataGridTextColumn Header="ID" Binding="{Binding Id}" IsReadOnly="True" Width="Auto"/>
                <DataGridTextColumn Header="Название проекта" Binding="{Binding ProjName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                <DataGridTextColumn Header="Название компании-заказчика" Binding="{Binding OrgOrderName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                <DataGridTextColumn Header="Название компании-исполнителя" Binding="{Binding OrgExecuteName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                <DataGridTemplateColumn Header="Дата начала проекта">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DateProjExecuteBegin, StringFormat=\{0:d\}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding DateProjExecuteBegin, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" SelectedDateFormat="Short"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Дата окончания проекта">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DateProjExecuteEnd, StringFormat=\{0:d\}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding DateProjExecuteEnd, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" SelectedDateFormat="Short"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Приоритет" Binding="{Binding Priority, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                <DataGridTextColumn Header="Комментарий" Binding="{Binding Comment, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                <DataGridTextColumn Header="Кол-во сотрудников" Binding="{Binding ProjEmplViews.Count}" IsReadOnly="True"/>
                <DataGridCheckBoxColumn Header="Наличие руководителя" Binding="{Binding HasALeader}" IsReadOnly="True"/>
            </ControlExt:ExtDataGrid.Columns>
        </ControlExt:ExtDataGrid>
        <Button Name="buttonSaveChanges" Content="Сохранить изменения" HorizontalAlignment="Left" Margin="535,429,0,0" VerticalAlignment="Top" Width="358" Command="{Binding SaveChangesCommand}" IsEnabled="{Binding IsProjectViewsChanged}"/>
        <Button Name="buttonCancelChanges" Content="Отменить изменения" HorizontalAlignment="Left" Margin="910,429,0,0" VerticalAlignment="Top" Width="398" Command="{Binding CancelChangesCommand}" IsEnabled="{Binding IsProjectViewsChanged}"/>
        <GroupBox Name="groupBox1" Header="Редактирование таблицы" HorizontalAlignment="Left" Margin="10,407,0,0" VerticalAlignment="Top" Height="60" Width="509">
            <Grid HorizontalAlignment="Left" Height="40" Margin="0,0,-2,-2" VerticalAlignment="Top" Width="499">
                <Button Name="buttonAdd" Content="Добавить" HorizontalAlignment="Left" Margin="10,8,0,0" VerticalAlignment="Top" Width="244" Command="{Binding AddProjectViewCommand}"/>
                <Button Name="buttonDel" Content="Удалить" HorizontalAlignment="Right" Margin="0,8,10,0" VerticalAlignment="Top" Width="219" Command="{Binding DelProjectViewCommand}"/>
            </Grid>
        </GroupBox>
    </Grid>
</Window>
